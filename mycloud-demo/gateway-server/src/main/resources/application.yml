server:
  port: 10010 # 网关端口
spring:
  application:
    name: gateway # 服务名称
  cloud:
    nacos:
      server-addr: 192.168.250.10:8848 # nacos地址
      discovery:
        namespace: 1c5ce879-6c87-45f1-9abf-4c1a62257cd0 #命名空间
    gateway:
      routes: # 网关路由配置
        - id: user # 路由id，自定义，只要唯一即可
          # uri: http://127.0.0.1:8081 # 路由的目标地址 http就是固定地址
          uri: lb://userserver # 路由的目标地址 lb就是负载均衡，后面跟服务名称
          predicates: # 路由断言，也就是判断请求是否符合路由规则的条件 总计11种，本项目使用path模式
            - Path=/user/** # 这个是按照路径匹配，只要以/user/开头就符合要求
#          filters: # 过滤器
#            - AddRequestHeader=say, ggsimida # 添加请求头
        - id: order
          uri: lb://orderserver
          predicates:
            - Path=/order/**
        # 过滤器执行顺序 默认过滤器(default-filters)->路由过滤器(filters)->全局过滤器(GlobalFilter实现类)，优先级问题另外考虑
#      default-filters: # 默认过滤器，全局生效
#        - AddRequestHeader=say, ggsimida
    globalcors: # 全局的跨域处理
      add-to-simple-url-handler-mapping: true # 解决options请求被拦截问题
      corsConfigurations:
        '[/**]': # /**拦截一切请求
          allowedOrigins: # 允许哪些网站的跨域请求
            - "http://localhost:9080"
          allowedMethods: # 允许的跨域ajax的请求方式
            - "GET"
            - "POST"
            - "DELETE"
            - "PUT"
            - "OPTIONS"
          allowedHeaders: "*" # 允许在请求中携带的头信息
          allowCredentials: true # 是否允许携带cookie
          maxAge: 360000 # 这次跨域检测的有效期